name: Create Azure AKS With Terraform
on:
  workflow_dispatch:

permissions:
      id-token: write
      contents: read
jobs: 
  AKS-Cluster-Deployment:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: AKS
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
  
      - name: Log in with Azure   
        run: |
           az login --service-principal -u '${{ secrets.AZURE_CLIENT_ID }}' -p '${{ secrets.AZURE_CLIENT_SECRET }}' --tenant '${{ secrets.AZURE_TENANT_ID }}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: latest

      - name: Import provider
        id: providerconfig
        run: |
          ls -al
          echo ${{ secrets.PROVIDER }} | base64 -d > /home/runner/work/AKS-Cluster-practice/AKS-Cluster-practice/AKS/providers.tf 

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Terraform Output
        run: terraform output

      - name: Deploy Application
        run: |
          az aks get-credentials -n "cluster-bursting-jennet" -g "rg-refined-swine"
          kubectl apply -f ./AKSApp/aks-store-quickstart.yaml
          sleep 40
          kubectl get service store-front
          rm -rf ~/.kube